//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ShiftSyncProAttendance.localhostAttendance {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AttendanceManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AttendanceManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertAttendanceBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStartTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEndTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOutTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAttStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkerCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupervisorCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAttendanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendanceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendanceByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendanceByWeekStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendanceByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOutTimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AttendanceManagementService() {
            this.Url = global::ShiftSyncProAttendance.Properties.Settings.Default.ShiftSyncProAttendance_localhostAttendance_AttendanceManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertAttendanceBatchCompletedEventHandler InsertAttendanceBatchCompleted;
        
        /// <remarks/>
        public event UpdateStartTimeCompletedEventHandler UpdateStartTimeCompleted;
        
        /// <remarks/>
        public event UpdateEndTimeCompletedEventHandler UpdateEndTimeCompleted;
        
        /// <remarks/>
        public event UpdateInTimeCompletedEventHandler UpdateInTimeCompleted;
        
        /// <remarks/>
        public event UpdateOutTimeCompletedEventHandler UpdateOutTimeCompleted;
        
        /// <remarks/>
        public event UpdateAttStatusCompletedEventHandler UpdateAttStatusCompleted;
        
        /// <remarks/>
        public event UpdateWorkerCommentCompletedEventHandler UpdateWorkerCommentCompleted;
        
        /// <remarks/>
        public event UpdateSupervisorCommentCompletedEventHandler UpdateSupervisorCommentCompleted;
        
        /// <remarks/>
        public event GetAllAttendanceCompletedEventHandler GetAllAttendanceCompleted;
        
        /// <remarks/>
        public event GetAttendanceByIdCompletedEventHandler GetAttendanceByIdCompleted;
        
        /// <remarks/>
        public event GetAttendanceByUserCompletedEventHandler GetAttendanceByUserCompleted;
        
        /// <remarks/>
        public event GetAttendanceByWeekStartDateCompletedEventHandler GetAttendanceByWeekStartDateCompleted;
        
        /// <remarks/>
        public event GetAttendanceByDateCompletedEventHandler GetAttendanceByDateCompleted;
        
        /// <remarks/>
        public event InsertInTimeCompletedEventHandler InsertInTimeCompleted;
        
        /// <remarks/>
        public event InsertOutTimeCompletedEventHandler InsertOutTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAttendanceBatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertAttendanceBatch(Attendance[] attendanceList) {
            object[] results = this.Invoke("InsertAttendanceBatch", new object[] {
                        attendanceList});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAttendanceBatchAsync(Attendance[] attendanceList) {
            this.InsertAttendanceBatchAsync(attendanceList, null);
        }
        
        /// <remarks/>
        public void InsertAttendanceBatchAsync(Attendance[] attendanceList, object userState) {
            if ((this.InsertAttendanceBatchOperationCompleted == null)) {
                this.InsertAttendanceBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAttendanceBatchOperationCompleted);
            }
            this.InvokeAsync("InsertAttendanceBatch", new object[] {
                        attendanceList}, this.InsertAttendanceBatchOperationCompleted, userState);
        }
        
        private void OnInsertAttendanceBatchOperationCompleted(object arg) {
            if ((this.InsertAttendanceBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAttendanceBatchCompleted(this, new InsertAttendanceBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStartTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateStartTime(int attendanceId, string newStartTime) {
            object[] results = this.Invoke("UpdateStartTime", new object[] {
                        attendanceId,
                        newStartTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStartTimeAsync(int attendanceId, string newStartTime) {
            this.UpdateStartTimeAsync(attendanceId, newStartTime, null);
        }
        
        /// <remarks/>
        public void UpdateStartTimeAsync(int attendanceId, string newStartTime, object userState) {
            if ((this.UpdateStartTimeOperationCompleted == null)) {
                this.UpdateStartTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStartTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateStartTime", new object[] {
                        attendanceId,
                        newStartTime}, this.UpdateStartTimeOperationCompleted, userState);
        }
        
        private void OnUpdateStartTimeOperationCompleted(object arg) {
            if ((this.UpdateStartTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStartTimeCompleted(this, new UpdateStartTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEndTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateEndTime(int attendanceId, string newEndTime) {
            object[] results = this.Invoke("UpdateEndTime", new object[] {
                        attendanceId,
                        newEndTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEndTimeAsync(int attendanceId, string newEndTime) {
            this.UpdateEndTimeAsync(attendanceId, newEndTime, null);
        }
        
        /// <remarks/>
        public void UpdateEndTimeAsync(int attendanceId, string newEndTime, object userState) {
            if ((this.UpdateEndTimeOperationCompleted == null)) {
                this.UpdateEndTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEndTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateEndTime", new object[] {
                        attendanceId,
                        newEndTime}, this.UpdateEndTimeOperationCompleted, userState);
        }
        
        private void OnUpdateEndTimeOperationCompleted(object arg) {
            if ((this.UpdateEndTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEndTimeCompleted(this, new UpdateEndTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateInTime(int attendanceId, string newInTime) {
            object[] results = this.Invoke("UpdateInTime", new object[] {
                        attendanceId,
                        newInTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInTimeAsync(int attendanceId, string newInTime) {
            this.UpdateInTimeAsync(attendanceId, newInTime, null);
        }
        
        /// <remarks/>
        public void UpdateInTimeAsync(int attendanceId, string newInTime, object userState) {
            if ((this.UpdateInTimeOperationCompleted == null)) {
                this.UpdateInTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateInTime", new object[] {
                        attendanceId,
                        newInTime}, this.UpdateInTimeOperationCompleted, userState);
        }
        
        private void OnUpdateInTimeOperationCompleted(object arg) {
            if ((this.UpdateInTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInTimeCompleted(this, new UpdateInTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOutTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateOutTime(int attendanceId, string newOutTime) {
            object[] results = this.Invoke("UpdateOutTime", new object[] {
                        attendanceId,
                        newOutTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOutTimeAsync(int attendanceId, string newOutTime) {
            this.UpdateOutTimeAsync(attendanceId, newOutTime, null);
        }
        
        /// <remarks/>
        public void UpdateOutTimeAsync(int attendanceId, string newOutTime, object userState) {
            if ((this.UpdateOutTimeOperationCompleted == null)) {
                this.UpdateOutTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOutTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateOutTime", new object[] {
                        attendanceId,
                        newOutTime}, this.UpdateOutTimeOperationCompleted, userState);
        }
        
        private void OnUpdateOutTimeOperationCompleted(object arg) {
            if ((this.UpdateOutTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOutTimeCompleted(this, new UpdateOutTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAttStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAttStatus(int attendanceId, string newStatus) {
            object[] results = this.Invoke("UpdateAttStatus", new object[] {
                        attendanceId,
                        newStatus});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAttStatusAsync(int attendanceId, string newStatus) {
            this.UpdateAttStatusAsync(attendanceId, newStatus, null);
        }
        
        /// <remarks/>
        public void UpdateAttStatusAsync(int attendanceId, string newStatus, object userState) {
            if ((this.UpdateAttStatusOperationCompleted == null)) {
                this.UpdateAttStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAttStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateAttStatus", new object[] {
                        attendanceId,
                        newStatus}, this.UpdateAttStatusOperationCompleted, userState);
        }
        
        private void OnUpdateAttStatusOperationCompleted(object arg) {
            if ((this.UpdateAttStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAttStatusCompleted(this, new UpdateAttStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkerComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWorkerComment(int attendanceId, string workerComment) {
            object[] results = this.Invoke("UpdateWorkerComment", new object[] {
                        attendanceId,
                        workerComment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWorkerCommentAsync(int attendanceId, string workerComment) {
            this.UpdateWorkerCommentAsync(attendanceId, workerComment, null);
        }
        
        /// <remarks/>
        public void UpdateWorkerCommentAsync(int attendanceId, string workerComment, object userState) {
            if ((this.UpdateWorkerCommentOperationCompleted == null)) {
                this.UpdateWorkerCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkerCommentOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkerComment", new object[] {
                        attendanceId,
                        workerComment}, this.UpdateWorkerCommentOperationCompleted, userState);
        }
        
        private void OnUpdateWorkerCommentOperationCompleted(object arg) {
            if ((this.UpdateWorkerCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkerCommentCompleted(this, new UpdateWorkerCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupervisorComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSupervisorComment(int attendanceId, string supervisorComment) {
            object[] results = this.Invoke("UpdateSupervisorComment", new object[] {
                        attendanceId,
                        supervisorComment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSupervisorCommentAsync(int attendanceId, string supervisorComment) {
            this.UpdateSupervisorCommentAsync(attendanceId, supervisorComment, null);
        }
        
        /// <remarks/>
        public void UpdateSupervisorCommentAsync(int attendanceId, string supervisorComment, object userState) {
            if ((this.UpdateSupervisorCommentOperationCompleted == null)) {
                this.UpdateSupervisorCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupervisorCommentOperationCompleted);
            }
            this.InvokeAsync("UpdateSupervisorComment", new object[] {
                        attendanceId,
                        supervisorComment}, this.UpdateSupervisorCommentOperationCompleted, userState);
        }
        
        private void OnUpdateSupervisorCommentOperationCompleted(object arg) {
            if ((this.UpdateSupervisorCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupervisorCommentCompleted(this, new UpdateSupervisorCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAttendance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllAttendance() {
            object[] results = this.Invoke("GetAllAttendance", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAttendanceAsync() {
            this.GetAllAttendanceAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAttendanceAsync(object userState) {
            if ((this.GetAllAttendanceOperationCompleted == null)) {
                this.GetAllAttendanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAttendanceOperationCompleted);
            }
            this.InvokeAsync("GetAllAttendance", new object[0], this.GetAllAttendanceOperationCompleted, userState);
        }
        
        private void OnGetAllAttendanceOperationCompleted(object arg) {
            if ((this.GetAllAttendanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAttendanceCompleted(this, new GetAllAttendanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttendanceById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAttendanceById(int attendanceId) {
            object[] results = this.Invoke("GetAttendanceById", new object[] {
                        attendanceId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendanceByIdAsync(int attendanceId) {
            this.GetAttendanceByIdAsync(attendanceId, null);
        }
        
        /// <remarks/>
        public void GetAttendanceByIdAsync(int attendanceId, object userState) {
            if ((this.GetAttendanceByIdOperationCompleted == null)) {
                this.GetAttendanceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendanceByIdOperationCompleted);
            }
            this.InvokeAsync("GetAttendanceById", new object[] {
                        attendanceId}, this.GetAttendanceByIdOperationCompleted, userState);
        }
        
        private void OnGetAttendanceByIdOperationCompleted(object arg) {
            if ((this.GetAttendanceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendanceByIdCompleted(this, new GetAttendanceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttendanceByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAttendanceByUser(int userId) {
            object[] results = this.Invoke("GetAttendanceByUser", new object[] {
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendanceByUserAsync(int userId) {
            this.GetAttendanceByUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAttendanceByUserAsync(int userId, object userState) {
            if ((this.GetAttendanceByUserOperationCompleted == null)) {
                this.GetAttendanceByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendanceByUserOperationCompleted);
            }
            this.InvokeAsync("GetAttendanceByUser", new object[] {
                        userId}, this.GetAttendanceByUserOperationCompleted, userState);
        }
        
        private void OnGetAttendanceByUserOperationCompleted(object arg) {
            if ((this.GetAttendanceByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendanceByUserCompleted(this, new GetAttendanceByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttendanceByWeekStartDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAttendanceByWeekStartDate(System.DateTime weekStartDate) {
            object[] results = this.Invoke("GetAttendanceByWeekStartDate", new object[] {
                        weekStartDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendanceByWeekStartDateAsync(System.DateTime weekStartDate) {
            this.GetAttendanceByWeekStartDateAsync(weekStartDate, null);
        }
        
        /// <remarks/>
        public void GetAttendanceByWeekStartDateAsync(System.DateTime weekStartDate, object userState) {
            if ((this.GetAttendanceByWeekStartDateOperationCompleted == null)) {
                this.GetAttendanceByWeekStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendanceByWeekStartDateOperationCompleted);
            }
            this.InvokeAsync("GetAttendanceByWeekStartDate", new object[] {
                        weekStartDate}, this.GetAttendanceByWeekStartDateOperationCompleted, userState);
        }
        
        private void OnGetAttendanceByWeekStartDateOperationCompleted(object arg) {
            if ((this.GetAttendanceByWeekStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendanceByWeekStartDateCompleted(this, new GetAttendanceByWeekStartDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttendanceByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAttendanceByDate(System.DateTime selectedDate) {
            object[] results = this.Invoke("GetAttendanceByDate", new object[] {
                        selectedDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendanceByDateAsync(System.DateTime selectedDate) {
            this.GetAttendanceByDateAsync(selectedDate, null);
        }
        
        /// <remarks/>
        public void GetAttendanceByDateAsync(System.DateTime selectedDate, object userState) {
            if ((this.GetAttendanceByDateOperationCompleted == null)) {
                this.GetAttendanceByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendanceByDateOperationCompleted);
            }
            this.InvokeAsync("GetAttendanceByDate", new object[] {
                        selectedDate}, this.GetAttendanceByDateOperationCompleted, userState);
        }
        
        private void OnGetAttendanceByDateOperationCompleted(object arg) {
            if ((this.GetAttendanceByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendanceByDateCompleted(this, new GetAttendanceByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertInTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertInTime(int userId, System.DateTime date, string inTime) {
            object[] results = this.Invoke("InsertInTime", new object[] {
                        userId,
                        date,
                        inTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertInTimeAsync(int userId, System.DateTime date, string inTime) {
            this.InsertInTimeAsync(userId, date, inTime, null);
        }
        
        /// <remarks/>
        public void InsertInTimeAsync(int userId, System.DateTime date, string inTime, object userState) {
            if ((this.InsertInTimeOperationCompleted == null)) {
                this.InsertInTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInTimeOperationCompleted);
            }
            this.InvokeAsync("InsertInTime", new object[] {
                        userId,
                        date,
                        inTime}, this.InsertInTimeOperationCompleted, userState);
        }
        
        private void OnInsertInTimeOperationCompleted(object arg) {
            if ((this.InsertInTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInTimeCompleted(this, new InsertInTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertOutTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertOutTime(int userId, System.DateTime date, string outTime) {
            object[] results = this.Invoke("InsertOutTime", new object[] {
                        userId,
                        date,
                        outTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOutTimeAsync(int userId, System.DateTime date, string outTime) {
            this.InsertOutTimeAsync(userId, date, outTime, null);
        }
        
        /// <remarks/>
        public void InsertOutTimeAsync(int userId, System.DateTime date, string outTime, object userState) {
            if ((this.InsertOutTimeOperationCompleted == null)) {
                this.InsertOutTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOutTimeOperationCompleted);
            }
            this.InvokeAsync("InsertOutTime", new object[] {
                        userId,
                        date,
                        outTime}, this.InsertOutTimeOperationCompleted, userState);
        }
        
        private void OnInsertOutTimeOperationCompleted(object arg) {
            if ((this.InsertOutTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOutTimeCompleted(this, new InsertOutTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Attendance {
        
        private int idField;
        
        private int scheduleIdField;
        
        private int userIdField;
        
        private System.DateTime weekStartDateField;
        
        private System.DateTime dateField;
        
        private string startTimeField;
        
        private string endTimeField;
        
        private string inTimeField;
        
        private string outTimeField;
        
        private string attStatusField;
        
        private string workerCommentField;
        
        private string supervisorCommentField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ScheduleId {
            get {
                return this.scheduleIdField;
            }
            set {
                this.scheduleIdField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime WeekStartDate {
            get {
                return this.weekStartDateField;
            }
            set {
                this.weekStartDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string InTime {
            get {
                return this.inTimeField;
            }
            set {
                this.inTimeField = value;
            }
        }
        
        /// <remarks/>
        public string OutTime {
            get {
                return this.outTimeField;
            }
            set {
                this.outTimeField = value;
            }
        }
        
        /// <remarks/>
        public string AttStatus {
            get {
                return this.attStatusField;
            }
            set {
                this.attStatusField = value;
            }
        }
        
        /// <remarks/>
        public string WorkerComment {
            get {
                return this.workerCommentField;
            }
            set {
                this.workerCommentField = value;
            }
        }
        
        /// <remarks/>
        public string SupervisorComment {
            get {
                return this.supervisorCommentField;
            }
            set {
                this.supervisorCommentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertAttendanceBatchCompletedEventHandler(object sender, InsertAttendanceBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAttendanceBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAttendanceBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateStartTimeCompletedEventHandler(object sender, UpdateStartTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStartTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStartTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateEndTimeCompletedEventHandler(object sender, UpdateEndTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEndTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEndTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateInTimeCompletedEventHandler(object sender, UpdateInTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateOutTimeCompletedEventHandler(object sender, UpdateOutTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOutTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOutTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateAttStatusCompletedEventHandler(object sender, UpdateAttStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAttStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAttStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateWorkerCommentCompletedEventHandler(object sender, UpdateWorkerCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWorkerCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWorkerCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateSupervisorCommentCompletedEventHandler(object sender, UpdateSupervisorCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSupervisorCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSupervisorCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllAttendanceCompletedEventHandler(object sender, GetAllAttendanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAttendanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAttendanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAttendanceByIdCompletedEventHandler(object sender, GetAttendanceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendanceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendanceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAttendanceByUserCompletedEventHandler(object sender, GetAttendanceByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendanceByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendanceByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAttendanceByWeekStartDateCompletedEventHandler(object sender, GetAttendanceByWeekStartDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendanceByWeekStartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendanceByWeekStartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAttendanceByDateCompletedEventHandler(object sender, GetAttendanceByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendanceByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendanceByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertInTimeCompletedEventHandler(object sender, InsertInTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertOutTimeCompletedEventHandler(object sender, InsertOutTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOutTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOutTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591