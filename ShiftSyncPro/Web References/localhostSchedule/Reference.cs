//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ShiftSyncPro.localhostSchedule {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ScheduleManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ScheduleManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesByGroupAndDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShiftOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpcomingScheduleForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScheduleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ScheduleManagementService() {
            this.Url = global::ShiftSyncPro.Properties.Settings.Default.ShiftSyncPro_localhostSchedule_ScheduleManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddScheduleCompletedEventHandler AddScheduleCompleted;
        
        /// <remarks/>
        public event UpdateScheduleCompletedEventHandler UpdateScheduleCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event GetSchedulesByUserCompletedEventHandler GetSchedulesByUserCompleted;
        
        /// <remarks/>
        public event GetSchedulesByGroupAndDateRangeCompletedEventHandler GetSchedulesByGroupAndDateRangeCompleted;
        
        /// <remarks/>
        public event GetScheduleByIdCompletedEventHandler GetScheduleByIdCompleted;
        
        /// <remarks/>
        public event UpdateShiftCompletedEventHandler UpdateShiftCompleted;
        
        /// <remarks/>
        public event GetScheduleByStartDateCompletedEventHandler GetScheduleByStartDateCompleted;
        
        /// <remarks/>
        public event GetUpcomingScheduleForUserCompletedEventHandler GetUpcomingScheduleForUserCompleted;
        
        /// <remarks/>
        public event GetAllScheduleCompletedEventHandler GetAllScheduleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSchedule(
                    int userId, 
                    string groupId, 
                    System.DateTime weekStartDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day1Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day1ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day2Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day2ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day3Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day3ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day4Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day4ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day5Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day5ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day6Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day6ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day7Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day7ShiftId, 
                    System.DateTime dayCreate, 
                    string timeCreate) {
            object[] results = this.Invoke("AddSchedule", new object[] {
                        userId,
                        groupId,
                        weekStartDate,
                        day1Date,
                        day1ShiftId,
                        day2Date,
                        day2ShiftId,
                        day3Date,
                        day3ShiftId,
                        day4Date,
                        day4ShiftId,
                        day5Date,
                        day5ShiftId,
                        day6Date,
                        day6ShiftId,
                        day7Date,
                        day7ShiftId,
                        dayCreate,
                        timeCreate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleAsync(
                    int userId, 
                    string groupId, 
                    System.DateTime weekStartDate, 
                    System.Nullable<System.DateTime> day1Date, 
                    System.Nullable<int> day1ShiftId, 
                    System.Nullable<System.DateTime> day2Date, 
                    System.Nullable<int> day2ShiftId, 
                    System.Nullable<System.DateTime> day3Date, 
                    System.Nullable<int> day3ShiftId, 
                    System.Nullable<System.DateTime> day4Date, 
                    System.Nullable<int> day4ShiftId, 
                    System.Nullable<System.DateTime> day5Date, 
                    System.Nullable<int> day5ShiftId, 
                    System.Nullable<System.DateTime> day6Date, 
                    System.Nullable<int> day6ShiftId, 
                    System.Nullable<System.DateTime> day7Date, 
                    System.Nullable<int> day7ShiftId, 
                    System.DateTime dayCreate, 
                    string timeCreate) {
            this.AddScheduleAsync(userId, groupId, weekStartDate, day1Date, day1ShiftId, day2Date, day2ShiftId, day3Date, day3ShiftId, day4Date, day4ShiftId, day5Date, day5ShiftId, day6Date, day6ShiftId, day7Date, day7ShiftId, dayCreate, timeCreate, null);
        }
        
        /// <remarks/>
        public void AddScheduleAsync(
                    int userId, 
                    string groupId, 
                    System.DateTime weekStartDate, 
                    System.Nullable<System.DateTime> day1Date, 
                    System.Nullable<int> day1ShiftId, 
                    System.Nullable<System.DateTime> day2Date, 
                    System.Nullable<int> day2ShiftId, 
                    System.Nullable<System.DateTime> day3Date, 
                    System.Nullable<int> day3ShiftId, 
                    System.Nullable<System.DateTime> day4Date, 
                    System.Nullable<int> day4ShiftId, 
                    System.Nullable<System.DateTime> day5Date, 
                    System.Nullable<int> day5ShiftId, 
                    System.Nullable<System.DateTime> day6Date, 
                    System.Nullable<int> day6ShiftId, 
                    System.Nullable<System.DateTime> day7Date, 
                    System.Nullable<int> day7ShiftId, 
                    System.DateTime dayCreate, 
                    string timeCreate, 
                    object userState) {
            if ((this.AddScheduleOperationCompleted == null)) {
                this.AddScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleOperationCompleted);
            }
            this.InvokeAsync("AddSchedule", new object[] {
                        userId,
                        groupId,
                        weekStartDate,
                        day1Date,
                        day1ShiftId,
                        day2Date,
                        day2ShiftId,
                        day3Date,
                        day3ShiftId,
                        day4Date,
                        day4ShiftId,
                        day5Date,
                        day5ShiftId,
                        day6Date,
                        day6ShiftId,
                        day7Date,
                        day7ShiftId,
                        dayCreate,
                        timeCreate}, this.AddScheduleOperationCompleted, userState);
        }
        
        private void OnAddScheduleOperationCompleted(object arg) {
            if ((this.AddScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleCompleted(this, new AddScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSchedule(int scheduleId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day1Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day1ShiftId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day2Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day2ShiftId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day3Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day3ShiftId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day4Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day4ShiftId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day5Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day5ShiftId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day6Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day6ShiftId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day7Date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day7ShiftId) {
            object[] results = this.Invoke("UpdateSchedule", new object[] {
                        scheduleId,
                        day1Date,
                        day1ShiftId,
                        day2Date,
                        day2ShiftId,
                        day3Date,
                        day3ShiftId,
                        day4Date,
                        day4ShiftId,
                        day5Date,
                        day5ShiftId,
                        day6Date,
                        day6ShiftId,
                        day7Date,
                        day7ShiftId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateScheduleAsync(int scheduleId, System.Nullable<System.DateTime> day1Date, System.Nullable<int> day1ShiftId, System.Nullable<System.DateTime> day2Date, System.Nullable<int> day2ShiftId, System.Nullable<System.DateTime> day3Date, System.Nullable<int> day3ShiftId, System.Nullable<System.DateTime> day4Date, System.Nullable<int> day4ShiftId, System.Nullable<System.DateTime> day5Date, System.Nullable<int> day5ShiftId, System.Nullable<System.DateTime> day6Date, System.Nullable<int> day6ShiftId, System.Nullable<System.DateTime> day7Date, System.Nullable<int> day7ShiftId) {
            this.UpdateScheduleAsync(scheduleId, day1Date, day1ShiftId, day2Date, day2ShiftId, day3Date, day3ShiftId, day4Date, day4ShiftId, day5Date, day5ShiftId, day6Date, day6ShiftId, day7Date, day7ShiftId, null);
        }
        
        /// <remarks/>
        public void UpdateScheduleAsync(
                    int scheduleId, 
                    System.Nullable<System.DateTime> day1Date, 
                    System.Nullable<int> day1ShiftId, 
                    System.Nullable<System.DateTime> day2Date, 
                    System.Nullable<int> day2ShiftId, 
                    System.Nullable<System.DateTime> day3Date, 
                    System.Nullable<int> day3ShiftId, 
                    System.Nullable<System.DateTime> day4Date, 
                    System.Nullable<int> day4ShiftId, 
                    System.Nullable<System.DateTime> day5Date, 
                    System.Nullable<int> day5ShiftId, 
                    System.Nullable<System.DateTime> day6Date, 
                    System.Nullable<int> day6ShiftId, 
                    System.Nullable<System.DateTime> day7Date, 
                    System.Nullable<int> day7ShiftId, 
                    object userState) {
            if ((this.UpdateScheduleOperationCompleted == null)) {
                this.UpdateScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduleOperationCompleted);
            }
            this.InvokeAsync("UpdateSchedule", new object[] {
                        scheduleId,
                        day1Date,
                        day1ShiftId,
                        day2Date,
                        day2ShiftId,
                        day3Date,
                        day3ShiftId,
                        day4Date,
                        day4ShiftId,
                        day5Date,
                        day5ShiftId,
                        day6Date,
                        day6ShiftId,
                        day7Date,
                        day7ShiftId}, this.UpdateScheduleOperationCompleted, userState);
        }
        
        private void OnUpdateScheduleOperationCompleted(object arg) {
            if ((this.UpdateScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduleCompleted(this, new UpdateScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSchedule(int scheduleId) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        scheduleId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int scheduleId) {
            this.DeleteScheduleAsync(scheduleId, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int scheduleId, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        scheduleId}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSchedulesByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSchedulesByUser(int userId) {
            object[] results = this.Invoke("GetSchedulesByUser", new object[] {
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesByUserAsync(int userId) {
            this.GetSchedulesByUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetSchedulesByUserAsync(int userId, object userState) {
            if ((this.GetSchedulesByUserOperationCompleted == null)) {
                this.GetSchedulesByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesByUserOperationCompleted);
            }
            this.InvokeAsync("GetSchedulesByUser", new object[] {
                        userId}, this.GetSchedulesByUserOperationCompleted, userState);
        }
        
        private void OnGetSchedulesByUserOperationCompleted(object arg) {
            if ((this.GetSchedulesByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesByUserCompleted(this, new GetSchedulesByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSchedulesByGroupAndDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSchedulesByGroupAndDateRange(string groupId, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetSchedulesByGroupAndDateRange", new object[] {
                        groupId,
                        startDate,
                        endDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesByGroupAndDateRangeAsync(string groupId, System.DateTime startDate, System.DateTime endDate) {
            this.GetSchedulesByGroupAndDateRangeAsync(groupId, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetSchedulesByGroupAndDateRangeAsync(string groupId, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetSchedulesByGroupAndDateRangeOperationCompleted == null)) {
                this.GetSchedulesByGroupAndDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesByGroupAndDateRangeOperationCompleted);
            }
            this.InvokeAsync("GetSchedulesByGroupAndDateRange", new object[] {
                        groupId,
                        startDate,
                        endDate}, this.GetSchedulesByGroupAndDateRangeOperationCompleted, userState);
        }
        
        private void OnGetSchedulesByGroupAndDateRangeOperationCompleted(object arg) {
            if ((this.GetSchedulesByGroupAndDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesByGroupAndDateRangeCompleted(this, new GetSchedulesByGroupAndDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScheduleById(int scheduleId) {
            object[] results = this.Invoke("GetScheduleById", new object[] {
                        scheduleId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByIdAsync(int scheduleId) {
            this.GetScheduleByIdAsync(scheduleId, null);
        }
        
        /// <remarks/>
        public void GetScheduleByIdAsync(int scheduleId, object userState) {
            if ((this.GetScheduleByIdOperationCompleted == null)) {
                this.GetScheduleByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByIdOperationCompleted);
            }
            this.InvokeAsync("GetScheduleById", new object[] {
                        scheduleId}, this.GetScheduleByIdOperationCompleted, userState);
        }
        
        private void OnGetScheduleByIdOperationCompleted(object arg) {
            if ((this.GetScheduleByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByIdCompleted(this, new GetScheduleByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateShift", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateShift(int scheduleId, int day, int newShiftId) {
            object[] results = this.Invoke("UpdateShift", new object[] {
                        scheduleId,
                        day,
                        newShiftId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShiftAsync(int scheduleId, int day, int newShiftId) {
            this.UpdateShiftAsync(scheduleId, day, newShiftId, null);
        }
        
        /// <remarks/>
        public void UpdateShiftAsync(int scheduleId, int day, int newShiftId, object userState) {
            if ((this.UpdateShiftOperationCompleted == null)) {
                this.UpdateShiftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShiftOperationCompleted);
            }
            this.InvokeAsync("UpdateShift", new object[] {
                        scheduleId,
                        day,
                        newShiftId}, this.UpdateShiftOperationCompleted, userState);
        }
        
        private void OnUpdateShiftOperationCompleted(object arg) {
            if ((this.UpdateShiftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShiftCompleted(this, new UpdateShiftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleByStartDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScheduleByStartDate(System.DateTime weekStartDate) {
            object[] results = this.Invoke("GetScheduleByStartDate", new object[] {
                        weekStartDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByStartDateAsync(System.DateTime weekStartDate) {
            this.GetScheduleByStartDateAsync(weekStartDate, null);
        }
        
        /// <remarks/>
        public void GetScheduleByStartDateAsync(System.DateTime weekStartDate, object userState) {
            if ((this.GetScheduleByStartDateOperationCompleted == null)) {
                this.GetScheduleByStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByStartDateOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByStartDate", new object[] {
                        weekStartDate}, this.GetScheduleByStartDateOperationCompleted, userState);
        }
        
        private void OnGetScheduleByStartDateOperationCompleted(object arg) {
            if ((this.GetScheduleByStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByStartDateCompleted(this, new GetScheduleByStartDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpcomingScheduleForUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUpcomingScheduleForUser(int userId, System.DateTime currentDate) {
            object[] results = this.Invoke("GetUpcomingScheduleForUser", new object[] {
                        userId,
                        currentDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpcomingScheduleForUserAsync(int userId, System.DateTime currentDate) {
            this.GetUpcomingScheduleForUserAsync(userId, currentDate, null);
        }
        
        /// <remarks/>
        public void GetUpcomingScheduleForUserAsync(int userId, System.DateTime currentDate, object userState) {
            if ((this.GetUpcomingScheduleForUserOperationCompleted == null)) {
                this.GetUpcomingScheduleForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpcomingScheduleForUserOperationCompleted);
            }
            this.InvokeAsync("GetUpcomingScheduleForUser", new object[] {
                        userId,
                        currentDate}, this.GetUpcomingScheduleForUserOperationCompleted, userState);
        }
        
        private void OnGetUpcomingScheduleForUserOperationCompleted(object arg) {
            if ((this.GetUpcomingScheduleForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpcomingScheduleForUserCompleted(this, new GetUpcomingScheduleForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSchedule() {
            object[] results = this.Invoke("GetAllSchedule", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScheduleAsync() {
            this.GetAllScheduleAsync(null);
        }
        
        /// <remarks/>
        public void GetAllScheduleAsync(object userState) {
            if ((this.GetAllScheduleOperationCompleted == null)) {
                this.GetAllScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScheduleOperationCompleted);
            }
            this.InvokeAsync("GetAllSchedule", new object[0], this.GetAllScheduleOperationCompleted, userState);
        }
        
        private void OnGetAllScheduleOperationCompleted(object arg) {
            if ((this.GetAllScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScheduleCompleted(this, new GetAllScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddScheduleCompletedEventHandler(object sender, AddScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateScheduleCompletedEventHandler(object sender, UpdateScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSchedulesByUserCompletedEventHandler(object sender, GetSchedulesByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSchedulesByGroupAndDateRangeCompletedEventHandler(object sender, GetSchedulesByGroupAndDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesByGroupAndDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesByGroupAndDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetScheduleByIdCompletedEventHandler(object sender, GetScheduleByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateShiftCompletedEventHandler(object sender, UpdateShiftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShiftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShiftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetScheduleByStartDateCompletedEventHandler(object sender, GetScheduleByStartDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByStartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByStartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUpcomingScheduleForUserCompletedEventHandler(object sender, GetUpcomingScheduleForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpcomingScheduleForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpcomingScheduleForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllScheduleCompletedEventHandler(object sender, GetAllScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591