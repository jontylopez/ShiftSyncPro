//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ShiftSyncPro.localhostRequest {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RequestManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class RequestManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddWeeklyRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestsByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestsByScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestsByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProofDocumentByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RequestManagementService() {
            this.Url = global::ShiftSyncPro.Properties.Settings.Default.ShiftSyncPro_localhostRequest_RequestManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddWeeklyRequestCompletedEventHandler AddWeeklyRequestCompleted;
        
        /// <remarks/>
        public event UpdateRequestStatusCompletedEventHandler UpdateRequestStatusCompleted;
        
        /// <remarks/>
        public event GetRequestsByUserCompletedEventHandler GetRequestsByUserCompleted;
        
        /// <remarks/>
        public event GetRequestsByScheduleCompletedEventHandler GetRequestsByScheduleCompleted;
        
        /// <remarks/>
        public event GetRequestsByStatusCompletedEventHandler GetRequestsByStatusCompleted;
        
        /// <remarks/>
        public event GetRequestByIdCompletedEventHandler GetRequestByIdCompleted;
        
        /// <remarks/>
        public event GetProofDocumentByIdCompletedEventHandler GetProofDocumentByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddWeeklyRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddWeeklyRequest(
                    int userId, 
                    int scheduleId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day1ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day1Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day2ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day2Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day3ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day3Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day4ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day4Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day5ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day5Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day6ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day6Date, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> day7ShiftId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> day7Date, 
                    string status, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> requestDate, 
                    string workerComment, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] proofDocument, 
                    string proofDocumentType) {
            object[] results = this.Invoke("AddWeeklyRequest", new object[] {
                        userId,
                        scheduleId,
                        day1ShiftId,
                        day1Date,
                        day2ShiftId,
                        day2Date,
                        day3ShiftId,
                        day3Date,
                        day4ShiftId,
                        day4Date,
                        day5ShiftId,
                        day5Date,
                        day6ShiftId,
                        day6Date,
                        day7ShiftId,
                        day7Date,
                        status,
                        requestDate,
                        workerComment,
                        proofDocument,
                        proofDocumentType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddWeeklyRequestAsync(
                    int userId, 
                    int scheduleId, 
                    System.Nullable<int> day1ShiftId, 
                    System.Nullable<System.DateTime> day1Date, 
                    System.Nullable<int> day2ShiftId, 
                    System.Nullable<System.DateTime> day2Date, 
                    System.Nullable<int> day3ShiftId, 
                    System.Nullable<System.DateTime> day3Date, 
                    System.Nullable<int> day4ShiftId, 
                    System.Nullable<System.DateTime> day4Date, 
                    System.Nullable<int> day5ShiftId, 
                    System.Nullable<System.DateTime> day5Date, 
                    System.Nullable<int> day6ShiftId, 
                    System.Nullable<System.DateTime> day6Date, 
                    System.Nullable<int> day7ShiftId, 
                    System.Nullable<System.DateTime> day7Date, 
                    string status, 
                    System.Nullable<System.DateTime> requestDate, 
                    string workerComment, 
                    byte[] proofDocument, 
                    string proofDocumentType) {
            this.AddWeeklyRequestAsync(userId, scheduleId, day1ShiftId, day1Date, day2ShiftId, day2Date, day3ShiftId, day3Date, day4ShiftId, day4Date, day5ShiftId, day5Date, day6ShiftId, day6Date, day7ShiftId, day7Date, status, requestDate, workerComment, proofDocument, proofDocumentType, null);
        }
        
        /// <remarks/>
        public void AddWeeklyRequestAsync(
                    int userId, 
                    int scheduleId, 
                    System.Nullable<int> day1ShiftId, 
                    System.Nullable<System.DateTime> day1Date, 
                    System.Nullable<int> day2ShiftId, 
                    System.Nullable<System.DateTime> day2Date, 
                    System.Nullable<int> day3ShiftId, 
                    System.Nullable<System.DateTime> day3Date, 
                    System.Nullable<int> day4ShiftId, 
                    System.Nullable<System.DateTime> day4Date, 
                    System.Nullable<int> day5ShiftId, 
                    System.Nullable<System.DateTime> day5Date, 
                    System.Nullable<int> day6ShiftId, 
                    System.Nullable<System.DateTime> day6Date, 
                    System.Nullable<int> day7ShiftId, 
                    System.Nullable<System.DateTime> day7Date, 
                    string status, 
                    System.Nullable<System.DateTime> requestDate, 
                    string workerComment, 
                    byte[] proofDocument, 
                    string proofDocumentType, 
                    object userState) {
            if ((this.AddWeeklyRequestOperationCompleted == null)) {
                this.AddWeeklyRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWeeklyRequestOperationCompleted);
            }
            this.InvokeAsync("AddWeeklyRequest", new object[] {
                        userId,
                        scheduleId,
                        day1ShiftId,
                        day1Date,
                        day2ShiftId,
                        day2Date,
                        day3ShiftId,
                        day3Date,
                        day4ShiftId,
                        day4Date,
                        day5ShiftId,
                        day5Date,
                        day6ShiftId,
                        day6Date,
                        day7ShiftId,
                        day7Date,
                        status,
                        requestDate,
                        workerComment,
                        proofDocument,
                        proofDocumentType}, this.AddWeeklyRequestOperationCompleted, userState);
        }
        
        private void OnAddWeeklyRequestOperationCompleted(object arg) {
            if ((this.AddWeeklyRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWeeklyRequestCompleted(this, new AddWeeklyRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRequestStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRequestStatus(int requestId, string status, System.DateTime changeDate, string supervisorComment) {
            object[] results = this.Invoke("UpdateRequestStatus", new object[] {
                        requestId,
                        status,
                        changeDate,
                        supervisorComment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequestStatusAsync(int requestId, string status, System.DateTime changeDate, string supervisorComment) {
            this.UpdateRequestStatusAsync(requestId, status, changeDate, supervisorComment, null);
        }
        
        /// <remarks/>
        public void UpdateRequestStatusAsync(int requestId, string status, System.DateTime changeDate, string supervisorComment, object userState) {
            if ((this.UpdateRequestStatusOperationCompleted == null)) {
                this.UpdateRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequestStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateRequestStatus", new object[] {
                        requestId,
                        status,
                        changeDate,
                        supervisorComment}, this.UpdateRequestStatusOperationCompleted, userState);
        }
        
        private void OnUpdateRequestStatusOperationCompleted(object arg) {
            if ((this.UpdateRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequestStatusCompleted(this, new UpdateRequestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequestsByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequestsByUser(int userId) {
            object[] results = this.Invoke("GetRequestsByUser", new object[] {
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestsByUserAsync(int userId) {
            this.GetRequestsByUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetRequestsByUserAsync(int userId, object userState) {
            if ((this.GetRequestsByUserOperationCompleted == null)) {
                this.GetRequestsByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestsByUserOperationCompleted);
            }
            this.InvokeAsync("GetRequestsByUser", new object[] {
                        userId}, this.GetRequestsByUserOperationCompleted, userState);
        }
        
        private void OnGetRequestsByUserOperationCompleted(object arg) {
            if ((this.GetRequestsByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestsByUserCompleted(this, new GetRequestsByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequestsBySchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequestsBySchedule(int scheduleId) {
            object[] results = this.Invoke("GetRequestsBySchedule", new object[] {
                        scheduleId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestsByScheduleAsync(int scheduleId) {
            this.GetRequestsByScheduleAsync(scheduleId, null);
        }
        
        /// <remarks/>
        public void GetRequestsByScheduleAsync(int scheduleId, object userState) {
            if ((this.GetRequestsByScheduleOperationCompleted == null)) {
                this.GetRequestsByScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestsByScheduleOperationCompleted);
            }
            this.InvokeAsync("GetRequestsBySchedule", new object[] {
                        scheduleId}, this.GetRequestsByScheduleOperationCompleted, userState);
        }
        
        private void OnGetRequestsByScheduleOperationCompleted(object arg) {
            if ((this.GetRequestsByScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestsByScheduleCompleted(this, new GetRequestsByScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequestsByStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequestsByStatus(string status) {
            object[] results = this.Invoke("GetRequestsByStatus", new object[] {
                        status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestsByStatusAsync(string status) {
            this.GetRequestsByStatusAsync(status, null);
        }
        
        /// <remarks/>
        public void GetRequestsByStatusAsync(string status, object userState) {
            if ((this.GetRequestsByStatusOperationCompleted == null)) {
                this.GetRequestsByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestsByStatusOperationCompleted);
            }
            this.InvokeAsync("GetRequestsByStatus", new object[] {
                        status}, this.GetRequestsByStatusOperationCompleted, userState);
        }
        
        private void OnGetRequestsByStatusOperationCompleted(object arg) {
            if ((this.GetRequestsByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestsByStatusCompleted(this, new GetRequestsByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRequestById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequestById(int id) {
            object[] results = this.Invoke("GetRequestById", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestByIdAsync(int id) {
            this.GetRequestByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetRequestByIdAsync(int id, object userState) {
            if ((this.GetRequestByIdOperationCompleted == null)) {
                this.GetRequestByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestByIdOperationCompleted);
            }
            this.InvokeAsync("GetRequestById", new object[] {
                        id}, this.GetRequestByIdOperationCompleted, userState);
        }
        
        private void OnGetRequestByIdOperationCompleted(object arg) {
            if ((this.GetRequestByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestByIdCompleted(this, new GetRequestByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProofDocumentById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProofDocumentById(int id) {
            object[] results = this.Invoke("GetProofDocumentById", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProofDocumentByIdAsync(int id) {
            this.GetProofDocumentByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetProofDocumentByIdAsync(int id, object userState) {
            if ((this.GetProofDocumentByIdOperationCompleted == null)) {
                this.GetProofDocumentByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProofDocumentByIdOperationCompleted);
            }
            this.InvokeAsync("GetProofDocumentById", new object[] {
                        id}, this.GetProofDocumentByIdOperationCompleted, userState);
        }
        
        private void OnGetProofDocumentByIdOperationCompleted(object arg) {
            if ((this.GetProofDocumentByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProofDocumentByIdCompleted(this, new GetProofDocumentByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddWeeklyRequestCompletedEventHandler(object sender, AddWeeklyRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWeeklyRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWeeklyRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateRequestStatusCompletedEventHandler(object sender, UpdateRequestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequestsByUserCompletedEventHandler(object sender, GetRequestsByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequestsByScheduleCompletedEventHandler(object sender, GetRequestsByScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestsByScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestsByScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequestsByStatusCompletedEventHandler(object sender, GetRequestsByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestsByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestsByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRequestByIdCompletedEventHandler(object sender, GetRequestByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetProofDocumentByIdCompletedEventHandler(object sender, GetProofDocumentByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProofDocumentByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProofDocumentByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591