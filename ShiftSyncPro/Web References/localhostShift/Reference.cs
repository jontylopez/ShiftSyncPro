//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ShiftSyncPro.localhostShift {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ShiftManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ShiftManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddShiftOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShiftOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteShiftOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllShiftsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShiftByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStartTimeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndTimeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShiftByTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ShiftManagementService() {
            this.Url = global::ShiftSyncPro.Properties.Settings.Default.ShiftSyncPro_localhostShift_ShiftManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddShiftCompletedEventHandler AddShiftCompleted;
        
        /// <remarks/>
        public event UpdateShiftCompletedEventHandler UpdateShiftCompleted;
        
        /// <remarks/>
        public event DeleteShiftCompletedEventHandler DeleteShiftCompleted;
        
        /// <remarks/>
        public event GetAllShiftsCompletedEventHandler GetAllShiftsCompleted;
        
        /// <remarks/>
        public event GetShiftByIdCompletedEventHandler GetShiftByIdCompleted;
        
        /// <remarks/>
        public event GetStartTimeByIdCompletedEventHandler GetStartTimeByIdCompleted;
        
        /// <remarks/>
        public event GetEndTimeByIdCompletedEventHandler GetEndTimeByIdCompleted;
        
        /// <remarks/>
        public event GetShiftByTypeCompletedEventHandler GetShiftByTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddShift", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddShift(string shiftType, string startTime, string endTime) {
            object[] results = this.Invoke("AddShift", new object[] {
                        shiftType,
                        startTime,
                        endTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddShiftAsync(string shiftType, string startTime, string endTime) {
            this.AddShiftAsync(shiftType, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void AddShiftAsync(string shiftType, string startTime, string endTime, object userState) {
            if ((this.AddShiftOperationCompleted == null)) {
                this.AddShiftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddShiftOperationCompleted);
            }
            this.InvokeAsync("AddShift", new object[] {
                        shiftType,
                        startTime,
                        endTime}, this.AddShiftOperationCompleted, userState);
        }
        
        private void OnAddShiftOperationCompleted(object arg) {
            if ((this.AddShiftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddShiftCompleted(this, new AddShiftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateShift", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateShift(int id, string shiftType, string startTime, string endTime) {
            object[] results = this.Invoke("UpdateShift", new object[] {
                        id,
                        shiftType,
                        startTime,
                        endTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShiftAsync(int id, string shiftType, string startTime, string endTime) {
            this.UpdateShiftAsync(id, shiftType, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void UpdateShiftAsync(int id, string shiftType, string startTime, string endTime, object userState) {
            if ((this.UpdateShiftOperationCompleted == null)) {
                this.UpdateShiftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShiftOperationCompleted);
            }
            this.InvokeAsync("UpdateShift", new object[] {
                        id,
                        shiftType,
                        startTime,
                        endTime}, this.UpdateShiftOperationCompleted, userState);
        }
        
        private void OnUpdateShiftOperationCompleted(object arg) {
            if ((this.UpdateShiftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShiftCompleted(this, new UpdateShiftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteShift", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteShift(int id) {
            object[] results = this.Invoke("DeleteShift", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteShiftAsync(int id) {
            this.DeleteShiftAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteShiftAsync(int id, object userState) {
            if ((this.DeleteShiftOperationCompleted == null)) {
                this.DeleteShiftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteShiftOperationCompleted);
            }
            this.InvokeAsync("DeleteShift", new object[] {
                        id}, this.DeleteShiftOperationCompleted, userState);
        }
        
        private void OnDeleteShiftOperationCompleted(object arg) {
            if ((this.DeleteShiftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteShiftCompleted(this, new DeleteShiftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllShifts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllShifts() {
            object[] results = this.Invoke("GetAllShifts", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllShiftsAsync() {
            this.GetAllShiftsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllShiftsAsync(object userState) {
            if ((this.GetAllShiftsOperationCompleted == null)) {
                this.GetAllShiftsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllShiftsOperationCompleted);
            }
            this.InvokeAsync("GetAllShifts", new object[0], this.GetAllShiftsOperationCompleted, userState);
        }
        
        private void OnGetAllShiftsOperationCompleted(object arg) {
            if ((this.GetAllShiftsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllShiftsCompleted(this, new GetAllShiftsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetShiftById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShiftById(int id) {
            object[] results = this.Invoke("GetShiftById", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShiftByIdAsync(int id) {
            this.GetShiftByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetShiftByIdAsync(int id, object userState) {
            if ((this.GetShiftByIdOperationCompleted == null)) {
                this.GetShiftByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShiftByIdOperationCompleted);
            }
            this.InvokeAsync("GetShiftById", new object[] {
                        id}, this.GetShiftByIdOperationCompleted, userState);
        }
        
        private void OnGetShiftByIdOperationCompleted(object arg) {
            if ((this.GetShiftByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShiftByIdCompleted(this, new GetShiftByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStartTimeById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStartTimeById(int id) {
            object[] results = this.Invoke("GetStartTimeById", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStartTimeByIdAsync(int id) {
            this.GetStartTimeByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetStartTimeByIdAsync(int id, object userState) {
            if ((this.GetStartTimeByIdOperationCompleted == null)) {
                this.GetStartTimeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStartTimeByIdOperationCompleted);
            }
            this.InvokeAsync("GetStartTimeById", new object[] {
                        id}, this.GetStartTimeByIdOperationCompleted, userState);
        }
        
        private void OnGetStartTimeByIdOperationCompleted(object arg) {
            if ((this.GetStartTimeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStartTimeByIdCompleted(this, new GetStartTimeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEndTimeById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEndTimeById(int id) {
            object[] results = this.Invoke("GetEndTimeById", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndTimeByIdAsync(int id) {
            this.GetEndTimeByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetEndTimeByIdAsync(int id, object userState) {
            if ((this.GetEndTimeByIdOperationCompleted == null)) {
                this.GetEndTimeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndTimeByIdOperationCompleted);
            }
            this.InvokeAsync("GetEndTimeById", new object[] {
                        id}, this.GetEndTimeByIdOperationCompleted, userState);
        }
        
        private void OnGetEndTimeByIdOperationCompleted(object arg) {
            if ((this.GetEndTimeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndTimeByIdCompleted(this, new GetEndTimeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetShiftByType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShiftByType(string shiftType) {
            object[] results = this.Invoke("GetShiftByType", new object[] {
                        shiftType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShiftByTypeAsync(string shiftType) {
            this.GetShiftByTypeAsync(shiftType, null);
        }
        
        /// <remarks/>
        public void GetShiftByTypeAsync(string shiftType, object userState) {
            if ((this.GetShiftByTypeOperationCompleted == null)) {
                this.GetShiftByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShiftByTypeOperationCompleted);
            }
            this.InvokeAsync("GetShiftByType", new object[] {
                        shiftType}, this.GetShiftByTypeOperationCompleted, userState);
        }
        
        private void OnGetShiftByTypeOperationCompleted(object arg) {
            if ((this.GetShiftByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShiftByTypeCompleted(this, new GetShiftByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddShiftCompletedEventHandler(object sender, AddShiftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddShiftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddShiftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateShiftCompletedEventHandler(object sender, UpdateShiftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShiftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShiftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteShiftCompletedEventHandler(object sender, DeleteShiftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteShiftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteShiftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllShiftsCompletedEventHandler(object sender, GetAllShiftsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllShiftsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllShiftsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetShiftByIdCompletedEventHandler(object sender, GetShiftByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShiftByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShiftByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStartTimeByIdCompletedEventHandler(object sender, GetStartTimeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStartTimeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStartTimeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetEndTimeByIdCompletedEventHandler(object sender, GetEndTimeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndTimeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndTimeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetShiftByTypeCompletedEventHandler(object sender, GetShiftByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShiftByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShiftByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591