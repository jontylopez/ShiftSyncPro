//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ShiftSyncPro.localhostEmployee {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmployeeManagementServiceSoap", Namespace="http://tempuri.org/")]
    public partial class EmployeeManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEmployeesNotInUserTableOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmployeeManagementService() {
            this.Url = global::ShiftSyncPro.Properties.Settings.Default.ShiftSyncPro_localhostEmployee_EmployeeManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertEmployeeCompletedEventHandler InsertEmployeeCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeCompletedEventHandler UpdateEmployeeCompleted;
        
        /// <remarks/>
        public event DeleteEmployeeCompletedEventHandler DeleteEmployeeCompleted;
        
        /// <remarks/>
        public event FindEmployeeCompletedEventHandler FindEmployeeCompleted;
        
        /// <remarks/>
        public event GetAllEmployeesCompletedEventHandler GetAllEmployeesCompleted;
        
        /// <remarks/>
        public event GetAllEmployeesNotInUserTableCompletedEventHandler GetAllEmployeesNotInUserTableCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertEmployee(
                    int id, 
                    int nic, 
                    int epfNo, 
                    int depId, 
                    string position, 
                    string fullName, 
                    string empAddress, 
                    int empTel, 
                    string empMail, 
                    System.DateTime dob, 
                    System.DateTime dateOfJoining, 
                    string empStatus, 
                    string emergencyContactName, 
                    string emergencyContactNumber, 
                    bool emailVerified, 
                    string photoUrl, 
                    string roleDescription, 
                    string departmentName, 
                    decimal salary) {
            object[] results = this.Invoke("InsertEmployee", new object[] {
                        id,
                        nic,
                        epfNo,
                        depId,
                        position,
                        fullName,
                        empAddress,
                        empTel,
                        empMail,
                        dob,
                        dateOfJoining,
                        empStatus,
                        emergencyContactName,
                        emergencyContactNumber,
                        emailVerified,
                        photoUrl,
                        roleDescription,
                        departmentName,
                        salary});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmployeeAsync(
                    int id, 
                    int nic, 
                    int epfNo, 
                    int depId, 
                    string position, 
                    string fullName, 
                    string empAddress, 
                    int empTel, 
                    string empMail, 
                    System.DateTime dob, 
                    System.DateTime dateOfJoining, 
                    string empStatus, 
                    string emergencyContactName, 
                    string emergencyContactNumber, 
                    bool emailVerified, 
                    string photoUrl, 
                    string roleDescription, 
                    string departmentName, 
                    decimal salary) {
            this.InsertEmployeeAsync(id, nic, epfNo, depId, position, fullName, empAddress, empTel, empMail, dob, dateOfJoining, empStatus, emergencyContactName, emergencyContactNumber, emailVerified, photoUrl, roleDescription, departmentName, salary, null);
        }
        
        /// <remarks/>
        public void InsertEmployeeAsync(
                    int id, 
                    int nic, 
                    int epfNo, 
                    int depId, 
                    string position, 
                    string fullName, 
                    string empAddress, 
                    int empTel, 
                    string empMail, 
                    System.DateTime dob, 
                    System.DateTime dateOfJoining, 
                    string empStatus, 
                    string emergencyContactName, 
                    string emergencyContactNumber, 
                    bool emailVerified, 
                    string photoUrl, 
                    string roleDescription, 
                    string departmentName, 
                    decimal salary, 
                    object userState) {
            if ((this.InsertEmployeeOperationCompleted == null)) {
                this.InsertEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmployeeOperationCompleted);
            }
            this.InvokeAsync("InsertEmployee", new object[] {
                        id,
                        nic,
                        epfNo,
                        depId,
                        position,
                        fullName,
                        empAddress,
                        empTel,
                        empMail,
                        dob,
                        dateOfJoining,
                        empStatus,
                        emergencyContactName,
                        emergencyContactNumber,
                        emailVerified,
                        photoUrl,
                        roleDescription,
                        departmentName,
                        salary}, this.InsertEmployeeOperationCompleted, userState);
        }
        
        private void OnInsertEmployeeOperationCompleted(object arg) {
            if ((this.InsertEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmployeeCompleted(this, new InsertEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateEmployee(Employee employee) {
            object[] results = this.Invoke("UpdateEmployee", new object[] {
                        employee});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(Employee employee) {
            this.UpdateEmployeeAsync(employee, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(Employee employee, object userState) {
            if ((this.UpdateEmployeeOperationCompleted == null)) {
                this.UpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployee", new object[] {
                        employee}, this.UpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeOperationCompleted(object arg) {
            if ((this.UpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEmployee(int id) {
            object[] results = this.Invoke("DeleteEmployee", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(int id) {
            this.DeleteEmployeeAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteEmployeeAsync(int id, object userState) {
            if ((this.DeleteEmployeeOperationCompleted == null)) {
                this.DeleteEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeOperationCompleted);
            }
            this.InvokeAsync("DeleteEmployee", new object[] {
                        id}, this.DeleteEmployeeOperationCompleted, userState);
        }
        
        private void OnDeleteEmployeeOperationCompleted(object arg) {
            if ((this.DeleteEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmployeeCompleted(this, new DeleteEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindEmployee(int id) {
            object[] results = this.Invoke("FindEmployee", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindEmployeeAsync(int id) {
            this.FindEmployeeAsync(id, null);
        }
        
        /// <remarks/>
        public void FindEmployeeAsync(int id, object userState) {
            if ((this.FindEmployeeOperationCompleted == null)) {
                this.FindEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindEmployeeOperationCompleted);
            }
            this.InvokeAsync("FindEmployee", new object[] {
                        id}, this.FindEmployeeOperationCompleted, userState);
        }
        
        private void OnFindEmployeeOperationCompleted(object arg) {
            if ((this.FindEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindEmployeeCompleted(this, new FindEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEmployees", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEmployees() {
            object[] results = this.Invoke("GetAllEmployees", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEmployeesAsync() {
            this.GetAllEmployeesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEmployeesAsync(object userState) {
            if ((this.GetAllEmployeesOperationCompleted == null)) {
                this.GetAllEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeesOperationCompleted);
            }
            this.InvokeAsync("GetAllEmployees", new object[0], this.GetAllEmployeesOperationCompleted, userState);
        }
        
        private void OnGetAllEmployeesOperationCompleted(object arg) {
            if ((this.GetAllEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEmployeesCompleted(this, new GetAllEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEmployeesNotInUserTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllEmployeesNotInUserTable() {
            object[] results = this.Invoke("GetAllEmployeesNotInUserTable", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEmployeesNotInUserTableAsync() {
            this.GetAllEmployeesNotInUserTableAsync(null);
        }
        
        /// <remarks/>
        public void GetAllEmployeesNotInUserTableAsync(object userState) {
            if ((this.GetAllEmployeesNotInUserTableOperationCompleted == null)) {
                this.GetAllEmployeesNotInUserTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeesNotInUserTableOperationCompleted);
            }
            this.InvokeAsync("GetAllEmployeesNotInUserTable", new object[0], this.GetAllEmployeesNotInUserTableOperationCompleted, userState);
        }
        
        private void OnGetAllEmployeesNotInUserTableOperationCompleted(object arg) {
            if ((this.GetAllEmployeesNotInUserTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEmployeesNotInUserTableCompleted(this, new GetAllEmployeesNotInUserTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Employee {
        
        private int idField;
        
        private int nICField;
        
        private int ePFNoField;
        
        private int depIdField;
        
        private string positionField;
        
        private string fullNameField;
        
        private string empAddressField;
        
        private int empTelField;
        
        private string empMailField;
        
        private System.DateTime dOBField;
        
        private System.DateTime dateOfJoiningField;
        
        private string empStatusField;
        
        private string emergencyContactNameField;
        
        private string emergencyContactNumberField;
        
        private bool emailVerifiedField;
        
        private string photoUrlField;
        
        private string roleDescriptionField;
        
        private string departmentNameField;
        
        private decimal salaryField;
        
        private System.DateTime createdAtField;
        
        private System.DateTime updatedAtField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int NIC {
            get {
                return this.nICField;
            }
            set {
                this.nICField = value;
            }
        }
        
        /// <remarks/>
        public int EPFNo {
            get {
                return this.ePFNoField;
            }
            set {
                this.ePFNoField = value;
            }
        }
        
        /// <remarks/>
        public int DepId {
            get {
                return this.depIdField;
            }
            set {
                this.depIdField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmpAddress {
            get {
                return this.empAddressField;
            }
            set {
                this.empAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmpTel {
            get {
                return this.empTelField;
            }
            set {
                this.empTelField = value;
            }
        }
        
        /// <remarks/>
        public string EmpMail {
            get {
                return this.empMailField;
            }
            set {
                this.empMailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfJoining {
            get {
                return this.dateOfJoiningField;
            }
            set {
                this.dateOfJoiningField = value;
            }
        }
        
        /// <remarks/>
        public string EmpStatus {
            get {
                return this.empStatusField;
            }
            set {
                this.empStatusField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyContactName {
            get {
                return this.emergencyContactNameField;
            }
            set {
                this.emergencyContactNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmergencyContactNumber {
            get {
                return this.emergencyContactNumberField;
            }
            set {
                this.emergencyContactNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool EmailVerified {
            get {
                return this.emailVerifiedField;
            }
            set {
                this.emailVerifiedField = value;
            }
        }
        
        /// <remarks/>
        public string PhotoUrl {
            get {
                return this.photoUrlField;
            }
            set {
                this.photoUrlField = value;
            }
        }
        
        /// <remarks/>
        public string RoleDescription {
            get {
                return this.roleDescriptionField;
            }
            set {
                this.roleDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DepartmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Salary {
            get {
                return this.salaryField;
            }
            set {
                this.salaryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedAt {
            get {
                return this.createdAtField;
            }
            set {
                this.createdAtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdatedAt {
            get {
                return this.updatedAtField;
            }
            set {
                this.updatedAtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertEmployeeCompletedEventHandler(object sender, InsertEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateEmployeeCompletedEventHandler(object sender, UpdateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteEmployeeCompletedEventHandler(object sender, DeleteEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FindEmployeeCompletedEventHandler(object sender, FindEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllEmployeesCompletedEventHandler(object sender, GetAllEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllEmployeesNotInUserTableCompletedEventHandler(object sender, GetAllEmployeesNotInUserTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEmployeesNotInUserTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEmployeesNotInUserTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591